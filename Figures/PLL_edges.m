function PLL_corners

clf

%set color definitions
[y,o,g,b,r]=rubiks.colorDefs;

%build yellow face
faces={y,y,y;...
	   y,y,y;...
	   y,y,y};






% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
% Case 1
sides={...
	   {b,b,b};...
	   {o,r,o};...
	   {g,o,g};...
   	   {r,g,r}...
   	   };

rubiks.drawFaceAndSides(faces,sides);
rubiks.drawArrows([6,4; 8,6; 4,8])
print('-depsc','PLL_edges/PLL_edges_1.eps')



% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
% Case 2
sides={...
	   {b,b,b};...
	   {o,g,o};...
	   {g,r,g};...
   	   {r,o,r}...
   	   };

rubiks.drawFaceAndSides(faces,sides);
rubiks.drawArrows([4,6; 6,8; 8,4])
print('-depsc','PLL_edges/PLL_edges_2.eps')


% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
% Case 3
sides={...
	   {o,g,o};...
	   {g,o,g};...
	   {r,b,r};...
   	   {b,r,b}...
   	   };

rubiks.drawFaceAndSides(faces,sides);
rubiks.drawArrows([2,6; 4,8],1)
print('-depsc','PLL_edges/PLL_edges_3.eps')


% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
% Case 4
sides={...
	   {o,r,o};...
	   {g,b,g};...
	   {r,o,r};...
   	   {b,g,b}...
   	   };

rubiks.drawFaceAndSides(faces,sides);
rubiks.drawArrows([2,8; 6,4],1)
print('-depsc','PLL_edges/PLL_edges_4.eps')


% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
% Case: solved
sides={...
	   {o,o,o};...
	   {g,g,g};...
	   {r,r,r};...
   	   {b,b,b}...
   	   };

rubiks.drawFaceAndSides(faces,sides);
print('-depsc','PLL_edges/PLL_solved.eps')

